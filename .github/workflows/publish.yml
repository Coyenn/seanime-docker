name: Publish Docker image

on:
  workflow_dispatch:
  repository_dispatch:
    types: [seanime_release]
  schedule:
    - cron: '0 0 * * *'  # Run daily to check for new releases

jobs:
  check_and_build:
    name: Check for new release and build Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Get latest release of 5rahim/seanime
        id: seanime_release
        run: |
          LATEST_RELEASE=$(curl -s https://api.github.com/repos/5rahim/seanime/releases/latest | jq -r .tag_name)
          echo "LATEST_RELEASE=${LATEST_RELEASE}" >> $GITHUB_OUTPUT
          echo "Latest 5rahim/seanime release: ${LATEST_RELEASE}"

      - name: Check if build is needed
        id: check_build
        run: |
          CURRENT_VERSION=$(cat .version 2>/dev/null || echo "none")
          if [ "${{ steps.seanime_release.outputs.LATEST_RELEASE }}" != "${CURRENT_VERSION}" ]; then
            echo "BUILD_NEEDED=true" >> $GITHUB_OUTPUT
            echo "New version detected. Build needed."
          else
            echo "BUILD_NEEDED=false" >> $GITHUB_OUTPUT
            echo "No new version. Skipping build."
          fi

      - name: Prepare the repository
        if: steps.check_build.outputs.BUILD_NEEDED == 'true'
        run: |
          chmod +x ./.docker/prepare.sh
          ./.docker/prepare.sh
        shell: bash

      - name: Log in to Docker Hub
        if: steps.check_build.outputs.BUILD_NEEDED == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata (tags, labels) for Docker
        if: steps.check_build.outputs.BUILD_NEEDED == 'true'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: coyann/seanime
          tags: |
            type=raw,value=${{ steps.seanime_release.outputs.LATEST_RELEASE }}
            type=raw,value=latest

      - name: Build and push Docker image
        if: steps.check_build.outputs.BUILD_NEEDED == 'true'
        id: push
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./.docker/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            SEANIME_VERSION=${{ steps.seanime_release.outputs.LATEST_RELEASE }}

      - name: Generate artifact attestation
        if: steps.check_build.outputs.BUILD_NEEDED == 'true'
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: coyann/seanime
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: Update version file
        if: steps.check_build.outputs.BUILD_NEEDED == 'true'
        run: |
          echo "${{ steps.seanime_release.outputs.LATEST_RELEASE }}" > .version
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .version
          git commit -m "Update to seanime version ${{ steps.seanime_release.outputs.LATEST_RELEASE }}"
          git push
